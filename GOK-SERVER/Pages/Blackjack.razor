@page "/blackjack"

<h1 style="text-align:center">Blackjack</h1>

@if (testingNullableDecimal2.HasValue && (int)testingNullableDecimal2.Value > 0)
{
    <MatButton Unelevated="true" Style=" position: absolute; left: 1400px; top: 700px;" OnClick="@startSpel2">genereer kaart</MatButton>
}

@if (!spelGestart)
{
    <div style="text-align: center; position: relative; top: 300px;">
        <MatButton Unelevated="true" OnClick="@startSpel" Disabled="start">Start spel</MatButton>
    </div>

}

@if (laatZien)
{
    <div style="text-align: center; position: relative; top: 600px;">
        <MatNumericUpDownField OnFocusOut="@checkIngevuldeWaarde" Label="coins inzetten"
                               @bind-Value=@testingNullableDecimal2
                               DecimalPlaces=0
                               Disabled="start"
                               Minimum=0 Maximum=500>
        </MatNumericUpDownField>
    </div>

}

@if (toonkaart)
{
    <MatButton Unelevated="true" Style=" position: absolute; left: 1400px; top: 700px;" OnClick="@spelen">genereer kaart</MatButton>

}

@code{

    [CascadingParameter]
    public DefaultClasses.Gebruiker HuidigeGebruiker { get; set; }

    public DefaultClasses.DBConnection DBConnection { get; set; }

    decimal? testingNullableDecimal2 = 0;

    public bool spelGestart = false;
    public bool laatZien = false;
    public bool disabled = true;
    public bool start = false;
    public bool toonkaart = false;
    public bool volgendeKaart = false;
    public List<int> kaartenSpeler;
    public List<int> kaartenDealer;
    public string urlKaartSpeler;
    public string urlKaartDealer;
    public double inzet;



    public BlackJackDomain.Game Game { get; set; }

    protected override void OnInitialized()
    {
        DBConnection = new DefaultClasses.DBConnection();
    }

    public void startSpel()
    {
        spelGestart = true;
        laatZien = true;
    }

    public void startSpel2()
    {
        Game = new BlackJackDomain.Game(inzet);
        Game.extraKaart();
        urlKaartSpeler = Game.lijstKaartenSpeler[0].url;
        Game.extraKaart();
        urlKaartSpeler = Game.lijstKaartenSpeler[1].url;
        Game.dealer();
        urlKaartDealer = Game.lijstKaartenDealer[0].url;
        Game.dealer();
        urlKaartDealer = Game.lijstKaartenDealer[1].url;
        start = true;

    }

    public void spelen()
    {
        int plaatsKaart = 2;

        while (volgendeKaart)
        {
            Game.extraKaart();
            urlKaartSpeler = Game.lijstKaartenSpeler[plaatsKaart].url;
            plaatsKaart++;
        }
    }

    public void checkIngevuldeWaarde()
    {
        if (testingNullableDecimal2.HasValue && (int)testingNullableDecimal2.Value > 0)
        {
            disabled = false;
        }
        else
        {
            disabled = true;
            inzet = (int)testingNullableDecimal2.Value;
        }
    }

    public void winnaar()
    {
        inzet += Game.winnaar();
    }
}