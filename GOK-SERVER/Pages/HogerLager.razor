@page "/test"

<h1 style="text-align: center;">Hoger Lager</h1>

@if (!spelGestart)
{
    <div style="text-align: center; position: relative; top: 300px;">
        <MatButton Unelevated="true" OnClick="@startSpel">Start spel</MatButton>
    </div>

}

@if (laatAllesZien)
{
    <div style="text-align: center; position: relative; top: 600px;">
        <MatNumericUpDownField OnFocusOut="@checkIngevuldeWaarde" Label="coins inzetten"
                               @bind-Value=@testingNullableDecimal2
                               DecimalPlaces=0
                               Minimum=1 Maximum=100>
        </MatNumericUpDownField>
    </div>

    <div style="position: relative; top: 544px; left: 1200px;">
        <MatButton Unelevated="true" OnClick="@startSpel2" Disabled="@disabled">Trek kaart</MatButton>
    </div>

}

@if (toonKaarten)
{
    <img style="position: relative; top: 50px; left: 1200px; height: 400px;" src="@urlKaartSpeler" />
    <img style="position: relative; top: 50px; height: 400px;" src="@urlKaartComputer" />
}


@code{

    public Random random = new Random();
    public int spelerKaart, computerKaart;
    public int winst;
    public String resultaat;
    public bool disabled = true;
    public bool laatAllesZien = false;
    public bool spelGestart = false;
    public List<string> genereerUrl1 { get; set; }
    public List<string> genereerUrl2 { get; set; }
    public string urlKaartSpeler;
    public string urlKaartComputer;
    public bool toonKaarten = false;

    decimal? testingNullableDecimal2 = 0;

    protected override void OnInitialized()
    {
        genereerUrl1 = DefaultClasses.UrlGenerator.GenerateUrls();
        genereerUrl2 = DefaultClasses.UrlGenerator.GenerateUrls();
    }

    public void startSpel()
    {
        laatAllesZien = true;
        spelGestart = true;

    }

    public void checkIngevuldeWaarde()
    {
        if (testingNullableDecimal2.HasValue && (int)testingNullableDecimal2.Value > 0)
        {
            disabled = false;
        }
        else
        {
            disabled = true;
        }
    }

    public void startSpel2()
    {
        genereerSpelerKaart();
        genereerComputerKaart();
        bepaalWinnaar();
        urlKaartSpeler = genereerUrl1[spelerKaart];
        urlKaartComputer = genereerUrl2[computerKaart];
        toonKaarten = true;

    }

    public void genereerSpelerKaart()
    {
        spelerKaart = random.Next(1, 13);
    }

    public void genereerComputerKaart()
    {
        computerKaart = random.Next(1, 13);
    }

    public void bepaalWinnaar()
    {
        int waardeIngezet = (int)testingNullableDecimal2.Value;

        if (spelerKaart > computerKaart)
        {
            winst += (waardeIngezet * 2);
            resultaat = "Je hebt gewonnen";
        }
        else if (spelerKaart < computerKaart)
        {
            winst -= waardeIngezet;
            resultaat = "je hebt verloren";
        }
        else
        {
            //winst blijft hetzelfde
            resultaat = "gelijk";
        }
    }

}
