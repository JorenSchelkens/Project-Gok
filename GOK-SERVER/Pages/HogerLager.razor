@page "/hoger_lager"

<div style="text-align: center;">
    <h1 style="display: inline-block;"><label for="info">Hoger Lager</label></h1>
    <MatIconButton OnClick="@veranderStatusInfo" Id="info" Icon="info"></MatIconButton>
</div>

<MatDialog @bind-IsOpen="@toonInfo">
    <MatDialogContent>
        <p>
            Druk op 'start spel' om het spel te starten. Kies daarna het bedrag dat je wilt inzetten.
            Druk daarna op 'trek kaart'. Jouw kaart staat rechts, de kaart van de computer staat links.
            Diegene die de hoogste kaart heeft wint.
        </p>
    </MatDialogContent>
</MatDialog>

@if (toonKaarten)
{
    <div style="text-align: center;" class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">Kaart computer</div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">Jouw kaart</div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6"><img style="height: 400px;" src="@hogerLager.computerKaart.url" /></div>
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6"><img style="height: 400px;" src="@hogerLager.spelerKaart.url" /></div>
        </div>

    </div>
}

@if (HuidigeGebruiker.Saldo > 0)
{
    <MatNumericUpDownField OnFocusOut="@checkIngevuldeWaarde" Label="coins inzetten"
                           @bind-Value="@testingNullableDecimal2"
                           DecimalPlaces=0
                           Minimum=0 Maximum=@HuidigeGebruiker.Saldo>
    </MatNumericUpDownField>
    <br />
    <MatButton Unelevated="true" Style="width: 278px; height: 56px; font-size: large" OnClick="@trekKaart" Disabled="@disabled">Trek kaart</MatButton>
}

@code{

    [CascadingParameter]
    public DefaultClasses.Gebruiker HuidigeGebruiker { get; set; }

    public DefaultClasses.DBConnection DBConnection { get; set; }

    HogerLagerDomain.HogerLager hogerLager;

    public bool toonInfo = false;

    public bool disabled = true;
    public bool toonKaarten = false;

    decimal? testingNullableDecimal2 = 0;

    protected override void OnInitialized()
    {
        DBConnection = new DefaultClasses.DBConnection();
    }

    public void veranderStatusInfo()
    {
        toonInfo = true;
    }

    public void checkIngevuldeWaarde()
    {

        if (testingNullableDecimal2.HasValue && (int)testingNullableDecimal2.Value > 0)
        {
            disabled = false;
        }
        else
        {
            disabled = true;
        }
    }

    public void trekKaart()
    {
        hogerLager = new HogerLagerDomain.HogerLager((int)testingNullableDecimal2.Value);
        HuidigeGebruiker.Saldo += hogerLager.StartSpel();
        updateGebruiker();
        toonKaarten = true;
    }

    private void updateGebruiker()
    {
        DBConnection.UpdateGebruiker(HuidigeGebruiker);
    }

}
