@page "/crash"
@using CrashDomain

<h1 style="text-align: center;"> Crash Gambling </h1>

@if (temp)
{
    <div style="text-align: center; top: 600px;">
        <MatNumericUpDownField Label="Inzet:"
                               @bind-Value=@testingNullableDecimal1
                               Step="10"
                               DecimalPlaces="0">
        </MatNumericUpDownField>
    </div>

    <div style="text-align: center; top: 600px; left: 600px;">
        <MatNumericUpDownField Label="Automatisch stoppen op:"
                               @bind-Value=@testingNullableDecimal2
                               Step="1.00m"
                               DecimalPlaces="2">
        </MatNumericUpDownField>
    </div>

    <div style="text-align: center; position: relative; top: 100px;">
        <MatButton OnClick="@Click" Raised="true">Start game</MatButton>
    </div>

}
else
{
    <p style="text-align: center; font-size:100px; margin-top:100px;">@Game.multiplier</p>
    <MatProgressBar Indeterminate="@progressBar"></MatProgressBar>

    <div style="text-align: center; margin-top: 25px">
        <MatButton OnClick="@CashOut" Raised="true" Disabled="@cashOut">Cash Out</MatButton>
    </div>

    <div style="text-align: center; margin-top: 100px">
        <p style="font-size: 75px; color: #e31e00">@crash</p>
        <p style="font-size: 30px">Aantal munten ingezet : @Game.muntenIngezet</p>
        <p style="font-size: 30px">Huidige winst : @Game.winstInMunten munten</p>
    </div>

    if(temp2)
    {
        <p style="text-align: center; margin-top: 50px; font-size: 20px">Volgende ronde in : @afteller</p>
    }

}


@code {

    decimal? testingNullableDecimal1 = 0;
    decimal? testingNullableDecimal2 = 0;

    public CrashDomain.Game Game { get; set; }

    public bool temp = true;
    public bool temp2 = false;
    public bool doeBerekening = true;
    public bool progressBar = true;
    public String crash;
    public bool cashOut;
    public int afteller = 5;

    protected override void OnInitialized()
    {
        Game = new Game();
    }

    public async void Click()
    {
        Game.muntenIngezet = (int)testingNullableDecimal1.Value;
        temp = false;

        double i = 0.00;

        Game.genereerRandomGetal();

        while (i + 0.01 <= Game.totalMultiplier)
        {

            Game.GeefDoor(i);
            if(doeBerekening)
            {
                Game.GeefWinstWeer();
            }
            this.StateHasChanged();

            await Task.Delay(Game.delay);

            i += 0.01;

        }

        temp2 = true;
        progressBar = false;
        doeBerekening = false;
        crash = "Crashed @ " + Game.multiplier;
        cashOut = true;

        this.StateHasChanged();

        CashOut();

    }

    public async void CashOut()
    {
        cashOut = true;
        temp2 = true;
        doeBerekening = false;

        for(int i = 5; i > 0; i--)
        {
            await Task.Delay(1000);
            afteller--;
            this.StateHasChanged();
        }
        reset();

    }

    public void reset()
    {
        temp = true;
        temp2 = false;
        progressBar = true;
        crash = null;
        cashOut = false;
        afteller = 5;

        Game = new Game();

        this.StateHasChanged();
    }

}