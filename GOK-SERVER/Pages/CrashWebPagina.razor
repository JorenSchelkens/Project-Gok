@page "/crash"
@using CrashDomain

<h1 style="text-align: center;"> Crash Gambling </h1>
<p>@Game.multiplier</p>


@if (temp)
{
    <div style="text-align: center; top: 600px;">
        <MatNumericUpDownField Label="Inzet:"
                               @bind-Value=@testingNullableDecimal1
                               Step="10"
                               DecimalPlaces="0">
        </MatNumericUpDownField>
    </div>

    <div style="text-align: center; top: 600px; left: 600px;">
        <MatNumericUpDownField Label="Automatisch stoppen op:"
                               @bind-Value=@testingNullableDecimal2
                               Step="1.00m"
                               DecimalPlaces="2">
        </MatNumericUpDownField>
    </div>

    <div style="text-align: center; position: relative; top: 300px;">
        <MatButton OnClick="@Click" Raised="true">Start game</MatButton>
    </div>

}
else
{

    <<<<<<< HEAD
    <EjsChart Title="Status" Width="100%">

        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Minimum="0" Maximum="20" Interval="1"></ChartPrimaryXAxis>
        =======
        @*<EjsChart Title="Status" Width="100%">

                    <ChartPrimaryYAxis RangePadding="ChartRangePadding.None" Minimum="0" Maximum="15"
                                       Interval="1.0">
                        <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                        <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                    </ChartPrimaryYAxis>
                    <EjsDataManager ></EjsDataManager>
            >>>>>>> 75bbb66cac766071f8bb85b337c44bcc31403e1b

                    <ChartSeriesCollection>
                        <ChartSeries DataSource="@CrashGegevens" XName="X" YName="Y" Type="ChartSeriesType.Line">
                        </ChartSeries>
                    </ChartSeriesCollection>
            <<<<<<< HEAD

                </EjsChart>
            =======
                </EjsChart>*@
        >>>>>>> 75bbb66cac766071f8bb85b337c44bcc31403e1b


        }

        @code {

            decimal? testingNullableDecimal1 = 0;
            decimal? testingNullableDecimal2 = 0;

    public CrashDomain.Game Game { get; set; }

        public bool temp = true;
        public int tempInt = 2;

        protected override void OnInitialized()
        {
            Game = new Game((int)testingNullableDecimal1.Value);
        }

        public async void Click()
        {
            temp = false;

            Game.totalMultiplier = (double)new Random().Next(10, 15);

            for (double i = 0; i < Game.totalMultiplier; i += 0.01)
            {
                await Task.Delay(50);
                dataChange(tempInt, Game.VerhoogMultiplier());
                tempInt++;
                StateHasChanged();
            }
        }

        public class ChartData
        {
            public int X { get; set; }
            public double Y { get; set; }

        }

        public List<ChartData> CrashGegevens = new List<ChartData>
{
        new ChartData { X = 1, Y = 0 },

    };

        public void dataChange(int temp, double temp2)
        {

            CrashGegevens.Add(new ChartData { X = temp, Y = temp2 });

        }

        }
