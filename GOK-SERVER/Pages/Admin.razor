@page "/admin"
@inject IMatToaster Toaster

<MatAccordion>

    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Bekijk alle gebruikers</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div class="mat-layout-grid">
                <div class="mat-layout-grid-inner">
                    @foreach (DefaultClasses.Gebruiker gebruiker in gebruikers)
                    {
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                            <MatTextField Label="Naam" ReadOnly="true" Value="@gebruiker.Naam"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                            <MatTextField Label="Gebruikersnaam" ReadOnly="true" Value="@gebruiker.Gebruikersnaam"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                            <MatTextField Style="min-width: 300px;" Label="Email" ReadOnly="true" Value="@gebruiker.Email"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-3">
                            <MatButton Type="submit" OnClick="@(() => Verwijder(gebruiker))" Raised="true">Verwijder</MatButton>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12"></div>
                    }
                </div>
            </div>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Voeg een giftcard toe</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>

            <div class="mat-layout-grid">
                <div class="mat-layout-grid-inner">
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                        <MatTextField @bind-Value="@invulCode" Label="Invul code" Style="width: 100%;" Required="true"></MatTextField>
                    </div>
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                        <MatNumericUpDownField Label="Aantal uses"
                                               @bind-Value=@UpDownFieldUses
                                               DecimalPlaces=0
                                               Icon="loop"
                                               Minimum="1"
                                               Required="true"
                                               Style="width: 100%;">
                        </MatNumericUpDownField>
                    </div>
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                        <MatNumericUpDownField Label="Procent (-1 indien niet te gebruiken)"
                                               @bind-Value=@UpDownFieldProcent
                                               Icon="%"
                                               Minimum="-1" Maximum="100"
                                               Required="true"
                                               Style="width: 100%;">
                        </MatNumericUpDownField>
                    </div>
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                        <MatNumericUpDownField Label="Ontvangen saldo (-1 indien niet te gebruiken)"
                                               @bind-Value=@UpDownFieldSaldo
                                               DecimalPlaces=0
                                               Icon="attach_money"
                                               Minimum="-1" Maximum="null"
                                               Required="true"
                                               Style="width: 100%;">
                        </MatNumericUpDownField>
                    </div>
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                        <MatButton Type="submit" OnClick="@maakGiftCard" Raised="true">Maak giftcard</MatButton>
                    </div>
                </div>
            </div>

        </MatExpansionPanelDetails>
    </MatExpansionPanel>
    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Bekijk alle giftcards</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div class="mat-layout-grid">
                <div class="mat-layout-grid-inner">
                    @foreach (DefaultClasses.DataBase.GiftCard giftCard in GiftCards)
                    {
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                            <MatTextField Label="Invul code" ReadOnly="true" Value="@giftCard.InvulCode"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                            <MatTextField Label="Uses left" ReadOnly="true" Value="@giftCard.UsesLeft.ToString()"></MatTextField>
                        </div>

                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2"></div>

                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                            <MatTextField Label="Korting procent" ReadOnly="true" Value="@giftCard.KortingProcent.ToString()"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                            <MatTextField Label="Te ontvangen saldo" ReadOnly="true" Value="@giftCard.TeOntvangenSaldo.ToString()"></MatTextField>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-2">
                            <MatButton Type="submit" OnClick="@(() => VerwijderGiftCard(giftCard))" Raised="true">Verwijder</MatButton>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12"></div>
                    }
                </div>
            </div>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
    @*<MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Voeg achievment toe</MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>

        </MatExpansionPanelDetails>
    </MatExpansionPanel>*@

</MatAccordion>


@code{

    public List<DefaultClasses.Gebruiker> gebruikers { get; set; } = new List<DefaultClasses.Gebruiker>();
    public List<DefaultClasses.DataBase.GiftCard> GiftCards { get; set; } = new List<DefaultClasses.DataBase.GiftCard>();
    public DefaultClasses.DBConnection DBConnection { get; set; }

    public string invulCode = "";
    decimal? UpDownFieldUses = null;
    decimal? UpDownFieldProcent = null;
    decimal? UpDownFieldSaldo = null;

    public int test = 0;

    protected override void OnInitialized()
    {
        DBConnection = new DefaultClasses.DBConnection();
        gebruikers = DBConnection.GetAllGebruikers();
        GiftCards = DBConnection.GetAllGiftCards();
    }

    public void Verwijder(DefaultClasses.Gebruiker gebruiker)
    {
        DBConnection.RemoveGebruiker(gebruiker.Email);
        gebruikers.Remove(gebruiker);
        this.StateHasChanged();

        Toaster.Add("Gebruiker verwijdert", MatToastType.Success, "Verwijdert!");
    }

    public async void maakGiftCard()
    {
        DBConnection.AddGiftCard(invulCode, (int)UpDownFieldUses.Value, (int)UpDownFieldProcent.Value, (int)UpDownFieldSaldo.Value);
        await Task.Delay(5);
        GiftCards = DBConnection.GetAllGiftCards();
        await Task.Delay(5);

        this.StateHasChanged();
        Toaster.Add("Giftcard gemaakt!", MatToastType.Success, "Succes!");
    }

    public void VerwijderGiftCard(DefaultClasses.DataBase.GiftCard giftCard)
    {
        DBConnection.RemoveGiftCard(giftCard.InvulCode);
        GiftCards.Remove(giftCard);
        this.StateHasChanged();

        Toaster.Add("Giftcard verwijdert", MatToastType.Success, "Verwijdert!");
    }
}